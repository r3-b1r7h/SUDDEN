<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<filter>
		<filter-name>authenticationFilter</filter-name>
		<filter-class>org.springframework.security.ui.webapp.AuthenticationProcessingFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authenticationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter 
		</filter-class>
		<init-param>
			<param-name>flushMode</param-name>
			<param-value>AUTO</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value> classpath:/biz/sudden/spring/rootContext.xml
			/WEB-INF/dispatcher.xml </param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.debugDOMUpdate</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.jspx</param-value>
	</context-param>
	
	<context-param>
		<description> State saving method: client or server (= default) See
			JSF Specification 2.5.2 </description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.concurrentDOMViews</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.synchronousUpdate</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.doJSFStateManagement</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.standardRequestScope</param-name>
		<param-value>false</param-value>
	</context-param>

    <context-param>
		<param-name>com.icesoft.faces.compressResources</param-name>
		<param-value>false</param-value>
	</context-param>
	
    <!-- file upload Servlet -->
	<servlet>
		<servlet-name>uploadServlet</servlet-name>
		<servlet-class>com.icesoft.faces.component.inputfile.FileUploadServlet</servlet-class>
		<load-on-startup> 1 </load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>uploadServlet</servlet-name>
		<url-pattern>/uploadHtml</url-pattern>
	</servlet-mapping>
	<context-param>
		<param-name>com.icesoft.faces.uploadMaxFileSize</param-name>
		<param-value>100000000</param-value><!-- in Bytes -->
	</context-param>
	<context-param>
		<param-name>com.icesoft.faces.component.inputfile.InputFile.setUniqueFolder</param-name>
		<param-value>false</param-value>
	</context-param>
	<context-param>
		<param-name>com.icesoft.faces.uploadDirectory</param-name>
		<param-value>./upload</param-value>
	</context-param>
	<context-param>
		<param-name>com.icesoft.faces.uploadDirectoryAbsolute</param-name>
		<param-value>true</param-value>
	</context-param>
	
	
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/dispatcher.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<servlet-class>
			com.icesoft.faces.webapp.xmlhttp.PersistentFacesServlet 
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet>
		<servlet-name>Blocking Servlet</servlet-name>
		<servlet-class> com.icesoft.faces.webapp.xmlhttp.BlockingServlet 
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<!--<url-pattern>*.jsf</url-pattern>-->
		<url-pattern>/faces/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>*.iface</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>Persistent Faces Servlet</servlet-name>
		<url-pattern>/xmlhttp/*</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>Blocking Servlet</servlet-name>
		<url-pattern>/block/*</url-pattern>
	</servlet-mapping>
		
	<welcome-file-list>
		<welcome-file>index.jsf</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
	<context-param>
		<param-name>com.icesoft.faces.heartbeatInterval</param-name>
		<param-value>20000</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.heartBeatTimeout</param-name>
		<param-value>5000</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.heartBeatRetries</param-name>
		<param-value>2</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.blockingConnectionTimeout</param-name>
		<param-value>20000</param-value>
	</context-param>
	
	<context-param>
		<param-name>com.icesoft.faces.connectionTimeout</param-name>
		<param-value>20000</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
	<!--
	<listener>
		<listener-class>biz.sudden.SuddenRequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>biz.sudden.SuddenPhaseListener</listener-class>
	</listener>
	-->
	<listener>
		<listener-class>biz.sudden.designCoordination.collaborativePlanning.SuddenListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>com.icesoft.faces.util.event.servlet.ContextEventRepeater</listener-class>
	</listener>
	<listener>
		<listener-class>biz.sudden.HibernateListener</listener-class>
	</listener>
</web-app>