package biz.sudden.knowledgeData.competencesManagement.repository.hibernate.testDBData;

import java.util.ArrayList;
import java.util.Hashtable;

import org.apache.log4j.Logger;

import biz.sudden.knowledgeData.competencesManagement.domain.CVI;
import biz.sudden.knowledgeData.competencesManagement.domain.Tick;
import biz.sudden.knowledgeData.competencesManagement.repository.ICVIRepository;
import biz.sudden.knowledgeData.competencesManagement.repository.ITickRepository;

public class TestDBDataCVIs {

	Logger logger = Logger.getLogger(this.getClass());

	// Access to other entities
	private TestDBDataCategories categories;
	// Repositories
	private ICVIRepository cviRepository;

	// Memory Objects
	private Hashtable<String, CVI> cvis = new Hashtable<String, CVI>();

	private ITickRepository tickRepository;

	public TestDBDataCategories getCategories() {
		return categories;
	}

	public CVI getCVI(String name) {
		if (!cvis.containsKey(name))
			logger.error("KEY not found!!!: " + name);
		return cvis.get(name);
	}

	public ICVIRepository getCviRepository() {
		return cviRepository;
	}

	public ITickRepository getTickRepository() {
		return tickRepository;
	}

	public void insertDBTestDataCVIs() {
		/* Adding CVIs Test Data */
		cvis.clear();
		insertDBTestDataCVIs_NQ();
		insertDBTestDataCVIs_Q();
		insertDBTestDataCVIs_Specific_Kommunikationstechnologie();
		insertDBTestDataCVIs_Specific_Logistikmanagement();
		insertDBTestDataCVIs_Specific_Umweltmanagement();
		insertDBTestDataCVIs_Specific_RechtundHaftung();
		insertDBTestDataCVIs_Specific_Qualitatsmanagement();
		insertDBTestDataCVIs_Specific_Kundenfokus();
		insertDBTestDataCVIs_Specific_KontinuierlicheVerbesserungLernenUndInnovation();
		insertDBTestDataCVIs_Specific_Finanzen();
	}

	private void insertDBTestDataCVIs_NQ() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Name, Tel. Nr., E-Mail");
		cvi.setDescription("Name, Tel. Nr., E-Mail");
		cvi.setEText("Name, Tel. Nr., E-Mail");
		cvi.setQText("Name, Tel. Nr., E-Mail");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("Name");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Telefonnummer");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("e-Mail Adresse");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Empty");
		cvi.setDescription("Empty");
		cvi.setEText("Empty");
		cvi.setQText("Empty");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("STRING");
		cvi.setDescription("STRING");
		cvi.setEText("STRING");
		cvi.setQText("STRING");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Rechtsform");
		cvi.setDescription("Rechtsform");
		cvi.setEText("Rechtsform");
		cvi.setQText("Rechtsform");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		tick.setTTextValue("GmbH");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("KG");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("AG");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Personengesellschaft");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("GmbH & Co. KG");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sonstige");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Industrie");
		cvi.setDescription("Industrie");
		cvi.setEText("Industrie");
		cvi.setQText("Industrie");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		tick.setTTextValue("Weiterbildung");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Forschung");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Produktion");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Entwicklung");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Beratung");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sonstige");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / NEIN");
		cvi.setDescription("Ja / NEIN");
		cvi.setEText("Ja / NEIN");
		cvi.setQText("Ja / NEIN");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Unternehmensgröße");
		cvi
				.setDescription("Unternehmensgröße (laut europäischer KMU-Definition, siehe Annex 1.1)");
		cvi
				.setEText("Unternehmensgröße (laut europäischer KMU-Definition, siehe Annex 1.1)");
		cvi
				.setQText("Unternehmensgröße (laut europäischer KMU-Definition, siehe Annex 1.1)");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick
				.setTTextValue("Kleinstunternehmen (unter 10 Mitarbeiter, 2 Mio < Jahresumsatz, 2 Mio < Jahresbilanzsumme)");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick
				.setTTextValue("Kleines Unternehmen (unter 50 Mitarbeiter, 10 Mio < Jahresumsatz, 10 Mio < Jahresbilanzsumme)");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick
				.setTTextValue("Mittleres Unternehmen (unter 250 Mitarbeiter, 50 Mio < Jahresumsatz, 43 Mio < Jahresbilanzsumme)");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Großunternehmen ");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Non Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Leitungspanne");
		cvi.setDescription("Leitungspanne");
		cvi.setEText("Leitungspanne");
		cvi.setQText("Leitungspanne");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0 Mitarbeiter");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1-4 Mitarbeiter");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("5-9 Mitarbeiter");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("10 und mehr Mitarbeiter");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Q() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Produktspektrum");
		cvi.setDescription("Produktspektrum");
		cvi.setEText("Produktspektrum");
		cvi.setQText("Produktspektrum");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick
				.setTTextValue("Direkt: Number will be provided by Service Management");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_PARTS_NUMBER);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Produktionsmethoden");
		cvi.setDescription("Produktionsmethoden");
		cvi.setEText("Produktionsmethoden");
		cvi.setQText("Produktionsmethoden");
		cvi.setMaxRange(20);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick
				.setTTextValue("Direkt: Number will be provided by Service Management");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_MATERIAL_PROCESSING);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Verarbeitete Materialien");
		cvi.setDescription("Verarbeitete Materialien");
		cvi.setEText("Verarbeitete Materialien");
		cvi.setQText("Verarbeitete Materialien");
		cvi.setMaxRange(20);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick
				.setTTextValue("Direkt: Number will be provided by Service Management");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_MATERIAL_NUMBER);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Maschinenpark");
		cvi.setDescription("Maschinenpark");
		cvi.setEText("Maschinenpark");
		cvi.setQText("Maschinenpark");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick
				.setTTextValue("Direkt: Number will be provided by Service Management");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_MACHINERY_TYPES);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / Nein / Trifft nicht zu");
		cvi.setDescription("Ja / Nein / Trifft nicht zu");
		cvi.setEText("Ja / Nein / Trifft nicht zu");
		cvi.setQText("Ja / Nein / Trifft nicht zu");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("trifft nicht zu");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / Nein / teilweise");
		cvi.setDescription("Ja / Nein / teilweise");
		cvi.setEText("Ja / Nein / teilweise");
		cvi.setQText("Ja / Nein / teilweise");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("teilweise");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / Nein - Quantifiable");
		cvi.setDescription("Ja / Nein - Quantifiable");
		cvi.setEText("Ja / Nein - Quantifiable");
		cvi.setQText("Ja / Nein - Quantifiable");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / Nein - Welche");
		cvi.setDescription("Ja / Nein - Welche");
		cvi.setEText("Ja / Nein - Welche");
		cvi.setQText("Ja / Nein - Welche");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Wenn ja, welche?");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Ja / Nein - Quantifiable Inverted");
		cvi.setDescription("Ja / Nein - Quantifiable Inverted");
		cvi.setEText("Ja / Nein - Quantifiable Inverted");
		cvi.setQText("Ja / Nein - Quantifiable Inverted");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Quantifiable CVIs - % 25 Step");
		cvi.setDescription("Quantifiable CVIs - % 25 Step");
		cvi.setEText("Quantifiable CVIs - % 25 Step");
		cvi.setQText("Quantifiable CVIs - % 25 Step");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("25%");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("50%");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("75%");
		tick.setTNumValue(7.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("100%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [7.5, 5, 2.5, 0]");
		cvi
				.setDescription("Quantifiable CVIs - ja immer / fast immer / selten / nie - [7.5, 5, 2.5, 0]");
		cvi
				.setEText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [7.5, 5, 2.5, 0]");
		cvi
				.setQText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [7.5, 5, 2.5, 0]");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(7.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 2.5, 0]");
		cvi
				.setDescription("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 2.5, 0]");
		cvi
				.setEText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 2.5, 0]");
		cvi
				.setQText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 2.5, 0]");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [5, 2.5, 0, 0]");
		cvi
				.setDescription("Quantifiable CVIs - ja immer / fast immer / selten / nie - [5, 2.5, 0, 0]");
		cvi
				.setEText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [5, 2.5, 0, 0]");
		cvi
				.setQText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [5, 2.5, 0, 0]");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7.5, 2.5, 0]");
		cvi
				.setDescription("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7.5, 2.5, 0]");
		cvi
				.setEText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7.5, 2.5, 0]");
		cvi
				.setQText("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7.5, 2.5, 0]");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(7.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7, 4, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(7);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7, 1, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(7);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 7, 3, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(7);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 6.6, 3.3, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(6.6f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(3.3f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 3, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 5, 0, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [10, 0, 0, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [6, 4, 1, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [4, 3, 1, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Quantifiable CVIs");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Quantifiable CVIs - ja immer / fast immer / selten / nie - [5, 3.5, 1.5, 0]");
		cvi.setDescription(cvi.getName());
		cvi.setEText(cvi.getName());
		cvi.setQText(cvi.getName());
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja immer");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("fast immer");
		tick.setTNumValue(3.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("selten");
		tick.setTNumValue(1.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nie");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Finanzen() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Finanzen");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Finanzen: Umsatz");
		cvi.setDescription("L0 Finanzen: Umsatz");
		cvi.setEText("L0 Finanzen: Umsatz");
		cvi.setQText("L0 Finanzen: Umsatz");
		cvi.setMaxRange(0);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("Umsatz Jahren 1");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Umsatz Jahren 2");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Umsatz Jahren 3");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Finanzen");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Finanzen: Exportanteil");
		cvi.setDescription("L0 Finanzen: Exportanteil");
		cvi.setEText("L0 Finanzen: Exportanteil");
		cvi.setQText("L0 Finanzen: Exportanteil");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1%-20%");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("21%-40%");
		tick.setTNumValue(7);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("41%-60%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("61%-80%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("81%-100%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Finanzen");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Finanzen: Deckungsbeitrag");
		cvi.setDescription("L0 Finanzen: Deckungsbeitrag");
		cvi.setEText("L0 Finanzen: Deckungsbeitrag");
		cvi.setQText("L0 Finanzen: Deckungsbeitrag");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("steigend");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("gleich bleibend");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ruecklaeufig");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Finanzen");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Finanzen: Materialanteil");
		cvi.setDescription("L0 Finanzen: Materialanteil");
		cvi.setEText("L0 Finanzen: Materialanteil");
		cvi.setQText("L0 Finanzen: Materialanteil");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1%-20%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("21%-40%");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("41%-60%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("61%-80%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("81%-100%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Finanzen");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Finanzen: Lohnanteil");
		cvi.setDescription("L0 Finanzen: Lohnanteil");
		cvi.setEText("L0 Finanzen: Lohnanteil");
		cvi.setQText("L0 Finanzen: Lohnanteil");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1%-20%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("21%-40%");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("41%-60%");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("61%-80%");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("81%-100%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Kommunikationstechnologie() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: CAE/CAM/CAD");
		cvi.setDescription("L0 Kommunikationstechnologie: CAE/CAM/CAD");
		cvi
				.setEText("Liste der möglichen Tools und Versionen für computergestützte Designer, computergestützte Produktion, computergestützte Engineering Tools:");
		cvi
				.setQText("Liste der möglichen Tools und Versionen für computergestützte Designer, computergestützte Produktion, computergestützte Engineering Tools:");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;5;7;10");
		tick = new Tick();
		tick.setTTextValue("IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA-FS");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("STL");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ISO G-CODE");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("3D Studio");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VRML");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA V4");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA V5");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Unigraphics");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Mech. Desktop");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DWG");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DXF");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("SAT");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Para solid");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Solid Works");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("STEP");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("JT Direct Modell Importer");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Auto CAD");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ALPHA CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("EDGE CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Esprit Gibbs CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("MASTER CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("PRO CAM II");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("PRO Engineer");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Solid CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Surf CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Work NC");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Top Solid CAM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: CAD Daten-Austausch Tools");
		cvi
				.setDescription("L0 Kommunikationstechnologie: CAD Daten-Austausch Tools");
		cvi
				.setEText("Liste der möglichen Tools und Versionen für computergestützte Designer, computergestützte Produktion, computergestützte Engineering Tools:");
		cvi
				.setQText("Liste der möglichen Tools und Versionen für computergestützte Designer, computergestützte Produktion, computergestützte Engineering Tools:");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;5;7;10");
		tick = new Tick();
		tick.setTTextValue("IGES<->DXF");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("SPAC->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DXF->DXF");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DWG->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("UNISURF->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("SET->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DXF->DWG");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA 3D->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA 2D->DXF");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("IGES 2D->Solid Works");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("MEDUSA 2D->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("MEDUSA 2D->Solid Works");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA 3D->Solid Works");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Think Desing->Robcad");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CADDS->Think Design");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ACIS->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA 2D->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CATIA->Solid Works");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CADDS 3D->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("MEDUSA 2D->Rob cad");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Solid Works3D->CATIA");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Think Desing->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("PARASOLID->IGES");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: EDI Tools");
		cvi.setDescription("L0 Kommunikationstechnologie: EDI Tools");
		cvi.setEText("L0 Kommunikationstechnologie: EDI Tools");
		cvi.setQText("L0 Kommunikationstechnologie: EDI Tools");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("EDI to EDI");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Edifact to XML");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("XML to Edifact");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("X12 to XML");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("XML to X12");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: EDI Standards");
		cvi.setDescription("L0 Kommunikationstechnologie: EDI Standards");
		cvi.setEText("L0 Kommunikationstechnologie: EDI Standards");
		cvi.setQText("L0 Kommunikationstechnologie: EDI Standards");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;7;10");
		tick = new Tick();
		tick.setTTextValue("VDA 4905");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4906");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4907");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4908");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4913");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4913(EDL)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4915");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4916");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDA 4920");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: ERP-System");
		cvi.setDescription("L0 Kommunikationstechnologie: ERP-System");
		cvi.setEText("L0 Kommunikationstechnologie: ERP-System");
		cvi.setQText("L0 Kommunikationstechnologie: ERP-System");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("SAP R/3");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Oracle");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sage");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Microsoft Dynamics");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Ordat");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Infor");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("SoftM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Abas");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Foss");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Navision");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("PRO-Alpha");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Brain");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: PPS-System");
		cvi.setDescription("L0 Kommunikationstechnologie: PPS-System");
		cvi.setEText("L0 Kommunikationstechnologie: PPS-System");
		cvi.setQText("L0 Kommunikationstechnologie: PPS-System");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("SAP R/3");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Baan");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Oracle");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("PSI");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("abas-Business-Software");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("AvERP");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("inforCOM (frueher VPPS)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Microsoft Dynamics AX (frueher Axapta)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Microsoft Dynamics NAV (frueher Navision)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sage Group");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ADempiere");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("People Soft");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Brain");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: CRM-System");
		cvi.setDescription("L0 Kommunikationstechnologie: CRM-System");
		cvi.setEText("L0 Kommunikationstechnologie: CRM-System");
		cvi.setQText("L0 Kommunikationstechnologie: CRM-System");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("ADempiere");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("People Soft");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("XRMS");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Salesforce.com");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("vtiger");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Lx-Office");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("IntarS");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sugar CRM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CiviCRM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Microsoft Dynamics CRM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ERM");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("ERP5");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("update software AG");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("SAP R/3");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Infor GlobaL Solutions");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Brain");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: SRM-System");
		cvi.setDescription("L0 Kommunikationstechnologie: SRM-System");
		cvi.setEText("L0 Kommunikationstechnologie: SRM-System");
		cvi.setQText("L0 Kommunikationstechnologie: SRM-System");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("SAP R/3");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Infor GlobaL Solutions");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kommunikationstechnologie: Videokonferenzen-System");
		cvi
				.setDescription("L0 Kommunikationstechnologie: SVideokonferenzenRM-System");
		cvi.setEText("L0 Kommunikationstechnologie: Videokonferenzen-System");
		cvi.setQText("L0 Kommunikationstechnologie: Videokonferenzen-System");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("Skype");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Ekiga");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Linphone");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("WengoPhone");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("iChat");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Microsoft Messenger");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi
				.setCategoryName("Specific Dimension CVIs - Kommunikationstechnologie");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L1 Kommunikationstechnologie: 0%-100%");
		cvi.setDescription("L1 Kommunikationstechnologie: 0%-100%");
		cvi.setEText("L1 Kommunikationstechnologie: 0%-100%");
		cvi.setQText("L1 Kommunikationstechnologie: 0%-100%");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("25%");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("50%");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("75%");
		tick.setTNumValue(9);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("100%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_KontinuierlicheVerbesserungLernenUndInnovation() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Lernen und Innovation");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("L0 KontinuierlicheVerbesserungLernenUndInnovation: Umfang");
		cvi
				.setDescription("L0 KontinuierlicheVerbesserungLernenUndInnovation: Umfang");
		cvi
				.setEText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Umfang");
		cvi
				.setQText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Umfang");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("10%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("20%");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("30%");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("40%");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("50%");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("60%");
		tick.setTNumValue(7);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("70%");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("80%");
		tick.setTNumValue(9);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("90%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("100%");
		tick.setTNumValue(100);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Lernen und Innovation");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("L0 KontinuierlicheVerbesserungLernenUndInnovation: Forschungsarbeit");
		cvi
				.setDescription("L0 KontinuierlicheVerbesserungLernenUndInnovation: Forschungsarbeit");
		cvi
				.setEText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Forschungsarbeit");
		cvi
				.setQText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Forschungsarbeit");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1%-2%");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("3%-5%");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("6%-7%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("8%-10%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("11%-12%");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("13%-15%");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("16%-20%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("21% und mehr");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Lernen und Innovation");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("L0 KontinuierlicheVerbesserungLernenUndInnovation: Patente");
		cvi
				.setDescription("L0 KontinuierlicheVerbesserungLernenUndInnovation: Patente");
		cvi
				.setEText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Patente");
		cvi
				.setQText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Patente");
		cvi.setMaxRange(5);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("Patente Number");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Lernen und Innovation");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("L0 KontinuierlicheVerbesserungLernenUndInnovation: Methoden des Prototypings");
		cvi
				.setDescription("L0 KontinuierlicheVerbesserungLernenUndInnovation: Methoden des Prototypings");
		cvi
				.setEText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Methoden des Prototypings");
		cvi
				.setQText("L0 KontinuierlicheVerbesserungLernenUndInnovation: Methoden des Prototypings");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0 methoden");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("1 methoden");
		tick.setTNumValue(1.6f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("2 methoden");
		tick.setTNumValue(3.3f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("3 methoden");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("4 methoden");
		tick.setTNumValue(6.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("5 methoden");
		tick.setTNumValue(8.3f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("6+ methoden");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 2");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 3");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 5");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 6");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 7");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 8");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Methoden 10");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Kundenfokus() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Kundenfokus");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kundenfokus: Automotiven");
		cvi.setDescription("L0 Kundenfokus: Automotiven");
		cvi.setEText("L0 Kundenfokus: Automotiven");
		cvi.setQText("L0 Kundenfokus: Automotiven");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 2");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 3");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 5");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 6");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 7");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 8");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Benennen Sie Ihre automotiven Kunden 10");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Kundenfokus");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kundenfokus: Hauptkunden");
		cvi.setDescription("L0 Kundenfokus: Hauptkunden");
		cvi.setEText("L0 Kundenfokus: Hauptkunden");
		cvi.setQText("L0 Kundenfokus: Hauptkunden");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("1- customer");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("2+ customers");
		tick.setTNumValue(2);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("4+ customers");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("6+ customers");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("8+ customers");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("10+ customers");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 2");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 3");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 5");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 6");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 7");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 8");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Customer 10");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Kundenfokus");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kundenfokus: Laendern");
		cvi.setDescription("L0 Kundenfokus: Laendern");
		cvi.setEText("L0 Kundenfokus: Laendern");
		cvi.setQText("L0 Kundenfokus: Laendern");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("3- countries");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("4+ customers");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("6+ countries");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("8+ countries");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("10+ countries");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Kundenfokus");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kundenfokus: Produkten");
		cvi.setDescription("L0 Kundenfokus: Produkten");
		cvi.setEText("L0 Kundenfokus: Produkten");
		cvi.setQText("L0 Kundenfokus: Produkten");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;1.6f;3.3f;5;6.5f;8.3;10");
		tick.setTTextValue("Beschaffung");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Logistik");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Engineering");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Design");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Testen");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Produktion");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sonstige");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Kundenfokus");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Kundenfokus: Qualitaetssicherungsvereinbarungen");
		cvi
				.setDescription("L0 Kundenfokus: Qualitaetssicherungsvereinbarungen");
		cvi.setEText("L0 Kundenfokus: Qualitaetssicherungsvereinbarungen");
		cvi.setQText("L0 Kundenfokus: Qualitaetssicherungsvereinbarungen");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("Number");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_NUMBER);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 2");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 2");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 3");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 3");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 5");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 5");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 6");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 6");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 7");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 7");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 8");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 8");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Name 10");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Duns-Number 10");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Logistikmanagement() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Logistikmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Logistikmanagement: Number of Suppliers");
		cvi.setDescription("L0 Logistikmanagement: Number of Suppliers");
		cvi.setEText("L0 Logistikmanagement: Number of Suppliers");
		cvi.setQText("L0 Logistikmanagement: Number of Suppliers");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0 - 5 suppliers");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("6+ suppliers");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("8+ suppliers");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("10+ suppliers");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Supplier 1");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Supplier 2");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Supplier 3");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Supplier 4");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Supplier 5");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Logistikmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Logistikmanagement: Number of Countries");
		cvi.setDescription("L0 Logistikmanagement: Number of Countries");
		cvi.setEText("L0 Logistikmanagement: Number of Countries");
		cvi.setQText("L0 Logistikmanagement: Number of Countries");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0 - 1 countries");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("2 countries");
		tick.setTNumValue(4);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("3 countries");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("4 countries");
		tick.setTNumValue(8);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("5+ countries");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Country 1");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Country 2");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Country 3");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Country 4");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Country 5");
		tick.setTNumValue(0);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Logistikmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Logistikmanagement: Logistiksysteme");
		cvi.setDescription("L0 Logistikmanagement: Logistiksysteme");
		cvi.setEText("L0 Logistikmanagement: Logistiksysteme");
		cvi.setQText("L0 Logistikmanagement: Logistiksysteme");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;2.5f;5;7.5f;10");
		tick.setTTextValue("KANBAN");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Ship to Line");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Ship to Stock");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Konsignationslager");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Abrufvereinbarung");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Logistikmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Logistikmanagement: Transportlogistik");
		cvi.setDescription("L0 Logistikmanagement: Transportlogistik");
		cvi.setEText("L0 Logistikmanagement: Transportlogistik");
		cvi.setQText("L0 Logistikmanagement: Transportlogistik");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;5;10");
		tick.setTTextValue("durch eigene Fahrzeuge und Personal");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("durch Logistik-Dienstleister");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Qualitatsmanagement() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Qualitatsmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("Qualitaetsmanagement, L0: Audit");
		cvi.setDescription("Qualitaetsmanagement, L0: Audit");
		cvi.setEText("Qualitaetsmanagement, L0: Audit");
		cvi.setQText("Qualitaetsmanagement, L0: Audit");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;10");
		tick = new Tick();
		tick.setTTextValue("GMP");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("UL");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Aqap 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Aqap 4");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Aqap 9");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Aqap 13");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 9001");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 9002");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 9003");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 13485");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 16949");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("VDE");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CSA");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("IEC");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("EN 1");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Durch wen wurde auditiert? (Unternehmen)");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Durch wen wurde auditiert? (Datum)");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Qualitatsmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("Qualitaetsmanagement, L1: Prozessfaehigkeitsuntersuchungen");
		cvi
				.setDescription("Qualitaetsmanagement, L1: Prozessfaehigkeitsuntersuchungen");
		cvi
				.setEText("Qualitaetsmanagement, L1: Prozessfaehigkeitsuntersuchungen");
		cvi
				.setQText("Qualitaetsmanagement, L1: Prozessfaehigkeitsuntersuchungen");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;5;10");
		tick = new Tick();
		tick.setTTextValue("Variable and attribute chars");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Average (X - )");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Range (R)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("standard deviation (s)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Shewhart");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("CuSum");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("combined Shewhart-CuSum");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("exponentially weighted moving average (EWMA)");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_RechtundHaftung() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Recht und Haftung");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Recht und Haftung: Produkte abgewickelt");
		cvi.setDescription("L0 Recht und Haftung: Produkte abgewickelt");
		cvi.setEText("L0 Recht und Haftung: Produkte abgewickelt");
		cvi.setQText("L0 Recht und Haftung: Produkte abgewickelt");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("");
		tick.setTTextValue("Vorgehensweise nach 8D-Report");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("es wird eine Gutschrift erteilt");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick
				.setTTextValue("es wird Ersatzlieferung vorgenommen, innerhalb wie vielen Arbeitstagen?");
		tick.setTNumValue(2.5f);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick
				.setTTextValue("sind Bestellungen mit abweichenden Daten zur Serienlieferung moeglich? Innerhalb wie vielen Arbeitstagen?");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sonstige");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	private void insertDBTestDataCVIs_Specific_Umweltmanagement() {
		CVI cvi = new CVI();
		ArrayList<Tick> ticks = new ArrayList<Tick>();
		Tick tick = new Tick();

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Umweltmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Umweltmanagement: Produkte entsorgt werden");
		cvi.setDescription("L0 Umweltmanagement: Produkte entsorgt werden");
		cvi.setEText("L0 Umweltmanagement: Produkte entsorgt werden");
		cvi.setQText("L0 Umweltmanagement: Produkte entsorgt werden");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("0;0;2.5f;2.5f;10");
		tick.setTTextValue("Recyclebar");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Hausmuell");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Sondermuell");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Ruecknahme");
		tick.setTNumValue(1);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Umweltmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi
				.setName("L0 Umweltmanagement: Ja / Nein, geplant / Nein, nicht geplant");
		cvi
				.setDescription("L0 Umweltmanagement: Ja / Nein, geplant / Nein, nicht geplant");
		cvi
				.setEText("L0 Umweltmanagement: Ja / Nein, geplant / Nein, nicht geplant");
		cvi
				.setQText("L0 Umweltmanagement: Ja / Nein, geplant / Nein, nicht geplant");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("ja, seit");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein, geplant");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("nein, nicht geplant");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Umweltmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Umweltmanagement: Wenn ja welches");
		cvi.setDescription("L0 Umweltmanagement: Wenn ja welches");
		cvi.setEText("L0 Umweltmanagement: Wenn ja welches");
		cvi.setQText("L0 Umweltmanagement: Wenn ja welches");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(true);
		cvi.setMultipleChoiceValues("");
		tick.setTTextValue("(EWG) 1836/93");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 14001");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("DIN ISO 14004");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("EMAS-Verordnung");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_CHECK);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("Andere");
		tick.setTNumValue(1);
		tick.setQuantifiable(false);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_STRING);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Umweltmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L0 Umweltmanagement: Zertifikat");
		cvi.setDescription("L0 Umweltmanagement: Zertifikat");
		cvi.setEText("L0 Umweltmanagement: Zertifikat");
		cvi.setQText("L0 Umweltmanagement: Zertifikat");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("internes Audit");
		tick.setTNumValue(5);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("externes Audit");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("keine");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);

		cvi = new CVI();
		ticks = new ArrayList<Tick>();
		tick = new Tick();
		cvi.setCategoryName("Specific Dimension CVIs - Umweltmanagement");
		cvi.setCategoryId(categories.getCategoryCVI(cvi.getCategoryName())
				.getId());
		cvi.setName("L1 Umweltmanagement: 0%-100%");
		cvi.setDescription("L1 Umweltmanagement: 0%-100%");
		cvi.setEText("L1 Umweltmanagement: 0%-100%");
		cvi.setQText("L1 Umweltmanagement: 0%-100%");
		cvi.setMaxRange(10);
		cvi.setMinRange(0);
		cvi.setMultipleChoice(false);
		tick.setTTextValue("0%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("25%");
		tick.setTNumValue(0);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("50%");
		tick.setTNumValue(3);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("75%");
		tick.setTNumValue(6);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		tick = new Tick();
		tick.setTTextValue("100%");
		tick.setTNumValue(10);
		tick.setQuantifiable(true);
		tick.setAutoValue(Tick.TICK_AUTOVALUE_USER);
		tick.setType(Tick.TICK_TYPE_RADIO);
		ticks.add(tick);
		tickRepository.addTick(tick);
		cvi.setTicks(ticks);
		cviRepository.addCVI(cvi);
		cvis.put(cvi.getName(), cvi);
	}

	public void setCategories(TestDBDataCategories categories) {
		this.categories = categories;
	}

	public void setCviRepository(ICVIRepository cviRepository) {
		this.cviRepository = cviRepository;
	}

	public void setTickRepository(ITickRepository tickRepository) {
		this.tickRepository = tickRepository;
	}
}
